{
    "swagger": "2.0",
    "info": {
        "description": "example of artifact web-framework",
        "title": "Artifact Boilerplate",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/users": {
            "get": {
                "description": "All users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Todo"
                ],
                "summary": "all users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": ""
                    }
                }
            },
            "post": {
                "description": "create a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Todo"
                ],
                "summary": "create a user",
                "parameters": [
                    {
                        "description": "Create Todo Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateTodoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": ""
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "description": "Todo Details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Todo"
                ],
                "summary": "user details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Todo ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": ""
                    }
                }
            },
            "put": {
                "description": "update a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Todo"
                ],
                "summary": "update a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Todo ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Todo Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateTodoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "description": "delete a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Todo"
                ],
                "summary": "delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Todo ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "422": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateTodoRequest": {
            "type": "object",
            "required": [
                "status",
                "task"
            ],
            "properties": {
                "status": {
                    "description": "required: true",
                    "type": "string",
                    "enum": [
                        "active",
                        "inactive"
                    ]
                },
                "task": {
                    "description": "required: true",
                    "type": "string",
                    "maxLength": 300,
                    "minLength": 1
                }
            }
        },
        "dto.UpdateTodoRequest": {
            "type": "object",
            "required": [
                "status",
                "task"
            ],
            "properties": {
                "status": {
                    "description": "required: true",
                    "type": "string",
                    "enum": [
                        "active",
                        "inactive"
                    ]
                },
                "task": {
                    "description": "required: true",
                    "type": "string",
                    "maxLength": 300,
                    "minLength": 1
                }
            }
        }
    }
}